redirects
----------------------------------------------------------------
/*    /index.html   200
----------------------------------------------------------------

index.html
----------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Wallet Verification</title>
  <script src="https://cdn.jsdelivr.net/npm/web3@1.6.0/dist/web3.min.js"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f5f5f5;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }

    .container {
      background-color: white;
      border-radius: 10px;
      padding: 30px;
      max-width: 600px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    h1 {
      text-align: center;
      margin-bottom: 30px;
    }

    .info {
      background-color: #f1f1f1;
      border: 1px solid #d4d4d4;
      padding: 15px;
      margin-bottom: 20px;
      border-radius: 5px;
    }

    .sign-message-button {
      display: block;
      width: 100%;
      padding: 10px;
      text-align: center;
      background-color: #007BFF;
      color: white;
      border-radius: 5px;
      border: none;
      text-decoration: none;
      font-size: 18px;
    }

    .sign-message-button:hover {
      background-color: #0056b3;
      transition: background-color 0.2s ease-in;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Wallet Verification</h1>
    <div class="info">
      <p><strong>Please note:</strong> This application is designed to verify that you own the wallet associated with the NFT and giveaway entry. By signing a message, you're only proving your ownership of the wallet, and we will not access or store any additional information about your account or transactions. Your privacy is important to us.</p>
    </div>
    <button id="signMessageButton" class="sign-message-button">Sign Message</button>
  </div>
  <script src="./index.js"></script>
</body>
</html>
----------------------------------------------------------------

index.js
----------------------------------------------------------------
document.addEventListener("DOMContentLoaded", () => {
  const web3Options = {
    provider: Web3.givenProvider || "ws://localhost:8545",
  };
  const web3 = new Web3(web3Options);

  const signMessageButton = document.getElementById("signMessageButton");
  signMessageButton.addEventListener("click", signMessage);

  async function signMessage() {
    try {
      const message = `Verify I own this wallet at ${Date.now()}`;

      if (typeof window.ethereum === "undefined") {
        throw new Error("Please install MetaMask to use this feature.");
      }

      let accounts = await ethereum.request({ method: "eth_accounts" });
      if (accounts.length === 0) {
        accounts = await ethereum.request({ method: "eth_requestAccounts" });
        if (accounts.length === 0) {
          throw new Error("Please unlock your MetaMask account.");
        }
      }

      const account = accounts[0];
      const prefixedMessage = web3.eth.accounts.hashMessage(message);

      const signature = await ethereum.request({
        method: "personal_sign",
        params: [prefixedMessage, account],
      });

      console.log(`Message "${message}" signed by ${account}: ${signature}`);

      const response = await fetch("https://heartfelt-frangollo-1fb42f.netlify.app/.netlify/functions/walletVerification", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          signature: signature,
          message: message,
          account: account,
        }),
      });
    
      if (!response.ok) {
        const errorText = await response.text();
        throw new Error(`Failed to send signature to the server. Status: ${response.status}, Message: ${errorText}`);
      }

    } catch (error) {
      console.error(error);
      alert(error.message);
    }
  }
});
----------------------------------------------------------------

netlify.toml
----------------------------------------------------------------
[build]
  publish = "frontend/"
  functions = "functions"
  command = "npm run build:functions"

[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  force = false
----------------------------------------------------------------

package.json
----------------------------------------------------------------
[build]
  publish = "frontend/"
  functions = "functions"
  command = "npm run build:functions"

[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  force = false
----------------------------------------------------------------

functions
        |_walletverification.js
        ----------------------------------------------------------------
        const Web3 = require("web3");

        const web3 = new Web3(); // No need to connect to a provider here.

        exports.handler = async function (event, context) {
        try {
            const { signature, message, account } = JSON.parse(event.body);

            // Recover the account address from the message and signature
            const messageHash = web3.utils.sha3(web3.utils.fromUtf8(message));
            const recoveredAccount = web3.eth.accounts.recover(messageHash, signature);

            // Check if the recovered account matches the original account
            if (recoveredAccount.toLowerCase() === account.toLowerCase()) {
            // The signature is valid; proceed with your logic.
            return {
                statusCode: 200,
                body: JSON.stringify({ success: true }),
            };
            } else {
            // The signature is invalid
            return {
                statusCode: 401,
                body: JSON.stringify({ success: false, error: "Invalid signature" }),
            };
            }
        } catch (error) {
            console.error(error);
            return {
            statusCode: 500,
            body: JSON.stringify({ success: false, error: "Internal server error" }),
            };
        }
        };
 ----------------------------------------------------------------
 
package.json
----------------------------------------------------------------

{
    "name": "wallet-confirm",
    "version": "1.0.0",
    "scripts": {
        "build:functions": "webpack --config webpack.functions.js"
    },
    "dependencies": {
        "web3": "^1.6.1"
    },
    "devDependencies": {
        "webpack": "^5.82.1",
        "webpack-cli": "^5.1.1"
    }
}
----------------------------------------------------------------
webpack.functions.js
----------------------------------------------------------------
const path = require("path");

module.exports = {
  entry: path.join(__dirname, "functions", "walletVerification.js"),
  target: "node",
  output: {
    path: path.join(__dirname, "functions"),
    filename: "walletVerification.js",
    libraryTarget: "commonjs",
  },
  externals: /^(?![./])/,
};
  ----------------------------------------------------------------